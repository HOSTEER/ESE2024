#include "strategy.h"


//extern strat_mode_t strat_mode;

champ_vect_t champ_vect;


void init_champ_vect(void){
	champ_vect.vitesse = 10;
	champ_vect.pt_lim_haut_gauche[0] = -1*(1000<<16);
	champ_vect.pt_lim_haut_gauche[1] = (500<<16);
	champ_vect.pt_lim_haut_droite[0] = (1000<<16);
	champ_vect.pt_lim_haut_droite[1] = (500<<16);
	champ_vect.pt_lim_bas_gauche[0] = -1*(1000<<16);
	champ_vect.pt_lim_bas_gauche[1] = -1*(500<<16);
	champ_vect.pt_lim_bas_droite[0] = (1000<<16);
	champ_vect.pt_lim_bas_droite[1] = -1*(500<<16);
	champ_vect.offset_gauche = -1*(10<<16);
	champ_vect.offset_droite = -1*champ_vect.offset_gauche;
	champ_vect.offset_haut = (10<<16);
	champ_vect.offset_bas = -1*champ_vect.offset_haut;
}


int strategy(strat_mode_t * strat_mode, hOdometry_t * hOdometry){

	if((*strat_mode & 0xF000) == HUNTER){
		//Le robot est chasseur
		if((*strat_mode & 0xFF) != NO_OBSTACLE){
			//Obstacle détecté

		}
		else{
			//Aucun obstacle

		}
	}
	else{
		//Le robot est la proie
		if((*strat_mode & 0xFF) != NO_OBSTACLE){
			//Obstacle détecté

		}
		else{
			//Aucun obstacle


		}
	}
	return 0;
}

int champ_vectoriel(strat_mode_t * strat_mode, hOdometry_t * hOdometry){

	return 0;
}

